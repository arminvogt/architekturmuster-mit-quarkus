---
openapi: 3.0.3
info:
  title: json-postgres API
  version: 1.0.0-SNAPSHOT
servers:
- url: http://localhost:8080
  description: Auto generated value
- url: http://0.0.0.0:8080
  description: Auto generated value
paths:
  /jsonresource:
    get:
      tags:
      - Json Resource
      parameters:
      - name: params
        in: query
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    post:
      tags:
      - Json Resource
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/JsonValue'
      responses:
        "200":
          description: OK
  /jsonresource/{id}:
    get:
      tags:
      - Json Resource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /organizations:
    get:
      tags:
      - Organisationen Suchen Resource
      parameters:
      - name: _page
        in: query
        schema:
          format: int32
          type: integer
      - name: _pagesize
        in: query
        schema:
          format: int32
          default: 10
          type: integer
      - name: beschreibung
        in: query
        schema:
          default: ""
          type: string
      - name: name
        in: query
        schema:
          default: ""
          type: string
      responses:
        "200":
          description: OK
  /organizations/{fachschluessel}/draft:
    get:
      tags:
      - Organisationen Bearbeiten Resource
      parameters:
      - name: fachschluessel
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Arbeitsversion'
    put:
      tags:
      - Organisationen Bearbeiten Resource
      parameters:
      - name: fachschluessel
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organisation'
      responses:
        "200":
          description: OK
    post:
      tags:
      - Organisationen Bearbeiten Resource
      parameters:
      - name: fachschluessel
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organisation'
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Organisationen Bearbeiten Resource
      parameters:
      - name: fachschluessel
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
      responses:
        "200":
          description: OK
  /organizations/{id}:
    get:
      tags:
      - Organisationen Suchen Resource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
components:
  schemas:
    Adresse:
      type: object
      properties:
        id:
          format: int64
          type: integer
        strasse:
          type: string
        postleitzahl:
          format: int32
          type: integer
        stadt:
          type: string
    Arbeitsversion:
      type: object
      properties:
        id:
          format: int64
          type: integer
        fachschluessel:
          $ref: '#/components/schemas/UUID'
        organisation:
          $ref: '#/components/schemas/Organisation'
        createdAt:
          $ref: '#/components/schemas/LocalDateTime'
    JsonValue:
      type: object
      properties:
        valueType:
          $ref: '#/components/schemas/ValueType'
    LocalDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50
    Organisation:
      required:
      - name
      - beschreibung
      type: object
      properties:
        id:
          format: int64
          type: integer
        fachschluessel:
          $ref: '#/components/schemas/UUID'
        name:
          pattern: \S
          type: string
        nummer:
          type: string
        beschreibung:
          pattern: \S
          type: string
        adressen:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Adresse'
    Status:
      enum:
      - IN_BEARBEITUNG
      - ZUR_PRUEFUNG
      - ZUR_FREIGABE
      type: string
    UUID:
      format: uuid
      pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
      type: string
    ValueType:
      enum:
      - ARRAY
      - OBJECT
      - STRING
      - NUMBER
      - "TRUE"
      - "FALSE"
      - "NULL"
      type: string
