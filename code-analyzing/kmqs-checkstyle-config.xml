<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN" "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--

  Checkstyle configuration that checks the sun coding conventions from:

    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

    - some best practices

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.

  Finally, it is worth reading the documentation.

-->

<module name="Checker">
    <!--
<module name="SuppressionCommentFilter">
  <property name="offCommentFormat" value="BEGIN TESTUNTERDRUECKEN"/>
  <property name="onCommentFormat" value="END TESTUNTERDRUECKEN"/>
</module>
<module name="SeverityMatchFilter">
  <property name="severity" value="error"/>
  <property name="acceptOnMatch" value="false"/>
</module>
-->
    <module name="SuppressionSingleFilter">
        <property name="checks" value="JavadocPackage" />
        <property name="files" value=".*[\\/]src[\\/](test)[\\/]java[\\/]" />
    </module>

    <!--
   <property name="severity" value="info"/>
    -->

    <!--
        If you set the basedir property below, then all reported file
        names will be relative to the specified directory. See
        http://checkstyle.sourceforge.net/5.x/config.html#Checker

        <property name="basedir" value="${basedir}"/>
    -->

    <property name="fileExtensions" value="java" />
    <!-- property name="fileExtensions" value="java, properties, xml"/-->


    <!-- Checks that a package-info.java file exists for each package.     -->
    <!-- See https://checkstyle.org/config_javadoc.html#JavadocPackage -->
    <module name="JavadocPackage">
        <property name="severity" value="warning" />
    </module>

    <!-- Checks whether files end with a new line.                        -->
    <!-- See https://checkstyle.org/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile">
        <property name="severity" value="info" />
        <!-- Alle Zeilenumbruchsarten zulassen (Default ist "system") -->
        <property name="lineSeparator" value="lf_cr_crlf" />
    </module>

    <!-- Checks that property files contain the same keys.         -->
    <!-- See https://checkstyle.org/config_misc.html#Translation -->
    <module name="Translation">
        <property name="severity" value="info" />
    </module>

    <!-- Checks for Size Violations.                    -->
    <!-- See https://checkstyle.org/config_sizes.html -->
    <module name="FileLength">
        <property name="severity" value="info" />
        <property name="max" value="2000" />
    </module>

    <!-- Checks for whitespace                               -->
    <!-- See https://checkstyle.org/config_whitespace.html -->
    <module name="FileTabCharacter">
        <property name="severity" value="error" />
    </module>


    <!-- Miscellaneous other checks.                   -->
    <!-- See https://checkstyle.org/config_misc.html -->
    <module name="RegexpSingleline">
        <property name="severity" value="info" />
        <property name="format" value="\s+$" />
        <property name="minimum" value="0" />
        <property name="maximum" value="0" />
        <property name="message" value="Line has trailing spaces." />
    </module>

    <!-- Checks for Size Violations.                    -->
    <!-- See https://checkstyle.org/config_sizes.html -->
    <!-- module name="LineLength"/-->
    <module name="LineLength">
        <property name="max" value="140" />
        <property name="severity" value="error" />
    </module>
    <!--
        <module name="ParameterNumber"/>
      -->
    <!--
    <module name="RegexpSingleline">
       <property name="format" value="[^\p{ASCII}]+"/>
       <property name="message" value="Zeile enthaelt nicht zugelassene Zeichen."/>
    </module>
   -->


    <!-- Checks for Headers                                -->
    <!-- See https://checkstyle.org/config_header.html   -->
    <!-- <module name="Header"> -->
    <!--   <property name="headerFile" value="${checkstyle.header.file}"/> -->
    <!--   <property name="fileExtensions" value="java"/> -->
    <!-- </module> -->

    <module name="TreeWalker">
        <!-- module name="FileContentsHolder"/-->
        <!-- Beispiel: Fe, wenn Suchausdruck nicht gefunden wird (multiline)
       <module name="Regexp">
          <property name="format" value="// Klassenkonstanten"/>
       </module>
    -->

        <!-- Beispiel: Fe, wenn Suchausdruck gefunden wird (multiline)
       <module name="Regexp">
          <property name="severity" value="warning"/>
          <property name="format" value="((//.*)|(\*.*))[^\p{ASCII}]+"/>
          <property name="illegalPattern" value="true"/>
          <property name="message" value="Kommentare sollen nur ASCII-Zeichen enthalten."/>
       </module>
    -->

        <!-- Beispiel:To find/match all text lines that do not contain a specific string.
          ^(.(?!stringToExclude))*$
    -->


        <module name="RegexpSinglelineJava">
            <!-- GRTK
         <property name="severity" value="info"/>
         -->
            <property name="severity" value="ignore" />
            <property name="format" value="((//.*)|(\*.*))[^\p{ASCII}]+" />
            <property name="message" value="Kommentare sollten keine Umlaute bzw. nur ASCII-Zeichen enthalten." />
        </module>


        <!-- Checks for Javadoc comments.                     -->
        <!-- See https://checkstyle.org/config_javadoc.html -->

        <!-- fuer getter/setter kein javadoc wieder deaktivieren
         <property name="allowMissingPropertyJavadoc" value="true"/>
         -->

        <module name="JavadocMethod">
            <property name="severity" value="error" />
            <property name="accessModifiers" value="public, protected, package, private" />
        </module>

        <!-- siehe TestMissingJavadocMethodCheck
      <module name="MissingJavadocMethod">
         <property name="severity" value="warning"/>
         <property name="scope" value="private"/>
      </module>
      -->

        <module name="NonEmptyAtclauseDescription">
            <property name="severity" value="info" />
            <property name="javadocTokens" value="PARAM_LITERAL,RETURN_LITERAL,THROWS_LITERAL,EXCEPTION_LITERAL,DEPRECATED_LITERAL" />
            <metadata name="net.sf.eclipsecs.core.lastEnabledSeverity" value="info" />
        </module>

        <module name="MissingJavadocType">
            <property name="id" value="MissingJavadocType" />
            <property name="severity" value="error" />
            <property name="scope" value="private" />
            <property name="skipAnnotations" value="" />
            <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, RECORD_DEF" />
        </module>

        <module name="JavadocType">
            <property name="severity" value="error" />
            <property name="allowUnknownTags" value="true" />
        </module>

        <module name="JavadocVariable">
            <property name="severity" value="error" />
            <property name="scope" value="protected" />
        </module>

        <module name="JavadocStyle">
            <property name="severity" value="error" />
            <property name="tokens"
                value="ANNOTATION_DEF, ANNOTATION_FIELD_DEF, CLASS_DEF, CTOR_DEF, ENUM_DEF, INTERFACE_DEF, METHOD_DEF, PACKAGE_DEF" />
        </module>
        <!-- erster Satz muss mit Punkt enden ... nicht fuer Konstanten und Membervariablen -->
        <module name="JavadocStyle">
            <property name="severity" value="error" />
            <property name="checkFirstSentence" value="false" />
            <property name="tokens" value="VARIABLE_DEF, ENUM_CONSTANT_DEF" />
        </module>

        <!-- Checks for Naming Conventions.                  -->
        <!-- See https://checkstyle.org/config_naming.html -->
        <module name="AbstractClassName">
            <property name="severity" value="info" />
            <property name="format" value="^A[A-Z][a-zA-Z0-9]*$" />
        </module>
        <module name="TypeName">
            <property name="severity" value="info" />
            <property name="format" value="^I[A-Z][a-zA-Z0-9]*$" />
            <property name="tokens" value="INTERFACE_DEF" />
        </module>
        <module name="MemberName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$" />
            <property name="severity" value="error" />
        </module>

        <module name="FinalLocalVariable">
            <property name="severity" value="warning" />
            <property name="validateEnhancedForLoopVariable" value="false" />
            <property name="tokens" value="VARIABLE_DEF" />
        </module>

        <module name="LocalVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$" />
            <property name="severity" value="error" />
        </module>
        <module name="LocalFinalVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$" />
            <property name="severity" value="error" />
        </module>
        <module name="ConstantName">
            <property name="severity" value="error" />
            <!-- GRTK Ziffern ab zweiter Stelle zulassen.
         <property name="format" value="^[A-Z]([A-Z,_])*$"/>
         -->
            <property name="format" value="^[A-Z]([0-9A-Z,_])*$" />
        </module>

        <module name="ClassTypeParameterName">
            <property name="severity" value="error" />
        </module>
        <module name="MethodTypeParameterName">
            <property name="severity" value="error" />
        </module>
        <module name="InterfaceTypeParameterName">
            <property name="severity" value="error" />
        </module>

        <module name="MethodName">
            <property name="severity" value="error" />
        </module>


        <!--module name="PackageName"/-->
        <module name="PackageName">
            <!-- GRTK Ziffern ab zweiter Stelle zulassen.
         <property name="format" value="^[a-z]+(\.[a-z][a-z_]*)*$"/>
         -->
            <property name="format" value="^[a-z]+(\.[a-z][0-9a-z_]*)*$" />
            <property name="severity" value="error" />
        </module>


        <module name="ParameterName">
            <property name="severity" value="error" />
        </module>

        <module name="StaticVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$" />
            <property name="severity" value="error" />
        </module>

        <module name="TypeName">
            <property name="severity" value="error" />
        </module>

        <!-- Checks for imports                              -->
        <!-- See https://checkstyle.org/config_import.html -->
        <module name="AvoidStarImport">
            <property name="severity" value="warning" />
        </module>
        <module name="IllegalImport" /> <!-- defaults to sun.* packages -->
        <module name="RedundantImport">
            <property name="severity" value="warning" />
        </module>
        <module name="ImportOrder">
            <property name="severity" value="warning" />
            <property name="option" value="bottom" />
            <property name="separatedStaticGroups" value="true" />
            <property name="sortStaticImportsAlphabetically" value="true" />
        </module>
        <module name="UnusedImports">
            <property name="processJavadoc" value="false" />
        </module>

        <module name="PackageDeclaration">
            <property name="severity" value="error" />
        </module>

        <module name="DeclarationOrder">
            <property name="severity" value="error" />
        </module>

        <!-- Checks for whitespace                               -->
        <!-- See https://checkstyle.org/config_whitespace.html -->
        <module name="EmptyForIteratorPad">
            <property name="severity" value="warning" />
        </module>
        <module name="GenericWhitespace">
            <property name="severity" value="warning" />
        </module>
        <module name="MethodParamPad">
            <property name="severity" value="warning" />
        </module>
        <module name="NoWhitespaceAfter">
            <property name="severity" value="warning" />
        </module>
        <module name="NoWhitespaceBefore">
            <property name="severity" value="warning" />
        </module>
        <module name="OperatorWrap">
            <property name="severity" value="warning" />
        </module>
        <module name="ParenPad">
            <property name="severity" value="warning" />
        </module>
        <module name="TypecastParenPad">
            <property name="severity" value="warning" />
        </module>
        <module name="WhitespaceAfter">
            <property name="severity" value="warning" />
        </module>
        <module name="WhitespaceAround">
            <property name="severity" value="warning" />
        </module>

        <!-- Modifier Checks                                    -->
        <!-- See https://checkstyle.org/config_modifiers.html -->
        <module name="ModifierOrder">
            <property name="severity" value="warning" />
        </module>
        <module name="RedundantModifier">
            <property name="severity" value="warning" />
        </module>

        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See https://checkstyle.org/config_blocks.html -->
        <module name="AvoidNestedBlocks">
            <property name="severity" value="warning" />
        </module>
        <module name="EmptyBlock">
            <property name="severity" value="warning" />
        </module>
        <module name="EmptyCatchBlock">
            <property name="severity" value="warning" />
        </module>
        <module name="LeftCurly">
            <property name="severity" value="error" />
        </module>
        <module name="NeedBraces">
            <property name="severity" value="error" />
        </module>
        <module name="RightCurly">
            <property name="severity" value="error" />
        </module>


        <module name="Indentation">
            <property name="severity" value="error" />
            <property name="basicOffset" value="4" />
            <property name="caseIndent" value="4" />
            <property name="throwsIndent" value="4" />
            <property name="arrayInitIndent" value="4" />
            <property name="lineWrappingIndentation" value="4" />
        </module>

        <module name="CommentsIndentation">
            <property name="severity" value="warning" />
        </module>

        <!-- Checks for common coding problems               -->
        <!-- See https://checkstyle.org/config_coding.html -->
        <module name="AvoidInlineConditionals">
            <property name="severity" value="ignore" />
        </module>

        <module name="EmptyStatement">
            <property name="severity" value="warning" />
        </module>
        <module name="EqualsHashCode">
            <property name="severity" value="warning" />
        </module>

        <module name="HiddenField">
            <property name="severity" value="ignore" />
            <property name="ignoreConstructorParameter" value="false" />
            <property name="ignoreSetter" value="false" />
        </module>

        <module name="RequireThis">
            <property name="severity" value="error" />
            <property name="checkFields" value="true" />
            <property name="checkMethods" value="false" />
            <property name="validateOnlyOverlapping" value="true" />
        </module>

        <!-- Check bzgl. Bevorzugung von Fabrikmethoden / Factory-Methoden -->
        <module name="IllegalInstantiation">
            <property name="severity" value="warning" />
        </module>

        <module name="InnerAssignment">
            <property name="severity" value="warning" />
        </module>
        <module name="MagicNumber">
            <property name="severity" value="ignore" />
        </module>
        <module name="MissingSwitchDefault">
            <property name="severity" value="warning" />
        </module>
        <module name="SimplifyBooleanExpression">
            <property name="severity" value="warning" />
        </module>
        <module name="SimplifyBooleanReturn">
            <property name="severity" value="warning" />
        </module>

        <!-- Checks for class design                         -->
        <!-- See https://checkstyle.org/config_design.html -->

        <!-- ersetzt mit eigener Testklasse TestDesignForExtensionCheck.java s.o.
      <module name="DesignForExtension">
         <property name="severity" value="warning"/>
      </module>
      -->

        <module name="FinalClass">
            <property name="severity" value="info" />
        </module>
        <module name="HideUtilityClassConstructor">
            <property name="severity" value="info" />
        </module>
        <module name="InterfaceIsType">
            <property name="severity" value="warning" />
        </module>
        <!-- ersetzt mit eigener Testklasse TestVisibilityModifierCheck.java s.o.
      <module name="VisibilityModifier">
         <property name="severity" value="error"/>
         -->
        <!-- Für annotationsgetriebene Tools, wie beispielsweise JUnit4 als Standard-Testtool für Unit-Tests
         kann es notwendig sein, mit bestimmten Annotationen versehene Instanzvariablen public zu machen.
         Für das Feature der Parameterized-Tests mit Field-Injection wurde daher auch die "Freischaltung" der
         Annotation org.junit.runners.Parameterized.Parameter hinzugefügt. -->
        <!--
         <property name="ignoreAnnotationCanonicalNames" value="org.junit.Rule,
            com.google.common.annotations.VisibleForTesting, org.junit.runners.Parameterized.Parameter"/>
      </module>
      -->

        <module name="AnnotationLocation">
            <property name="severity" value="info" />
            <property name="allowSamelineMultipleAnnotations" value="false" />
            <property name="allowSamelineSingleParameterlessAnnotation" value="false" />
            <property name="allowSamelineParameterizedAnnotation" value="false" />
            <!-- Anm.: ggf. Aenderung von Attribut 'tokens' (Default fuer Auswahl der Elemente,
           fuer welche die Regel gelten soll) -->
            <!-- property name="tokens" value="" -->
        </module>

        <!-- Miscellaneous other checks.                   -->
        <!-- See https://checkstyle.org/config_misc.html -->
        <module name="ArrayTypeStyle">
            <property name="severity" value="info" />
        </module>
        <module name="FinalParameters">
            <property name="severity" value="warning" />
        </module>

        <module name="TodoComment">
            <property name="severity" value="ignore" />
        </module>

        <module name="UpperEll">
            <property name="severity" value="info" />
        </module>

        <module name="MethodLength">
            <property name="severity" value="warning" />
            <property name="max" value="150" />
        </module>

        <module name="AnonInnerLength">
            <property name="severity" value="info" />
            <property name="max" value="40" />
        </module>

        <!--
   -->

    </module>
    <module name="com.puppycrawl.tools.checkstyle.filters.SuppressionFilter">
        <property name="optional" value="true" />
    </module>


</module>